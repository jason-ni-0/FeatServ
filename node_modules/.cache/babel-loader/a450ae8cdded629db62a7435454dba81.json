{"ast":null,"code":"var _jsxFileName = \"/Users/jasonni/Desktop/feat-test/src/App.js\";\nimport React, { Component } from 'react'; //import 'React' default export, and { Component } non-default export from react\n\nimport fetch from 'isomorphic-fetch'; // isomorphic-fetch is used for both server side and client side 'fetch' (see https://github.com/matthew-andrews/isomorphic-fetch)\n// App.css was a hangover from the create-react-app, it's not really needed for this basic example\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  // This is the same as 'extends 'React.Component'\n  constructor(props) {\n    super(props);\n\n    this.fetchIt = () => {\n      console.log('fetching it');\n      fetch(url, {\n        mode: 'cors'\n      }) // Make sure fetch is cross-origin, it's not by default (see https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS) since the target URL of the API is a different 'origin' to our react app\n      .then(resp => {\n        console.log(resp);\n        return resp.json();\n      }).then(data => {\n        // data input parameter is the result of the resolved resp.json() Promise (see https://developer.mozilla.org/en-US/docs/Web/API/Body/json)\n        console.log(data);\n        this.setState({\n          fetchedData: data\n        }); // setState sets the component state with the data from the API response\n      }).catch(function (error) {\n        console.log(JSON.stringify(error));\n      });\n    };\n\n    this.state = {\n      fetchedData: null // stores the result of the fetch response body converted to a javascript object\n\n    };\n  }\n\n  render() {\n    if (!this.state.fetchedData) {\n      // only do the fetch if there is no fetchedData already (BTW this will run many times if the API is unavailable, or 'fetchIt() encounters an error)\n      this.fetchIt();\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.fetchedData ? `fetched ${this.state.fetchedData.length} entries` : 'no data' // This is a 'ternary' expression, a simple 'if->else'\n\n      /* equivalent to:\n         if(this.state.fetchedData) {\n            return `fetched ${this.state.fetchedData.length} entries`; // this is 'javascript string interpolation'\n        } else {\n            return 'no data';\n        }\n      *\n      * */\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App; // Export our component to be used by other react higher order components (parents), in this case, it's imported in 'index.js', data is only fetched when the component renders.","map":{"version":3,"names":["React","Component","fetch","App","constructor","props","fetchIt","console","log","url","mode","then","resp","json","data","setState","fetchedData","catch","error","JSON","stringify","state","render","length"],"sources":["/Users/jasonni/Desktop/feat-test/src/App.js"],"sourcesContent":["import React, { Component } from 'react'; //import 'React' default export, and { Component } non-default export from react\nimport fetch from 'isomorphic-fetch'; // isomorphic-fetch is used for both server side and client side 'fetch' (see https://github.com/matthew-andrews/isomorphic-fetch)\n// App.css was a hangover from the create-react-app, it's not really needed for this basic example\n\n\n\n\n\nclass App extends Component { // This is the same as 'extends 'React.Component'\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            fetchedData: null // stores the result of the fetch response body converted to a javascript object\n        };\n    }\n\n  fetchIt = () => {\n      console.log('fetching it');\n      fetch(url, { mode: 'cors' }) // Make sure fetch is cross-origin, it's not by default (see https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS) since the target URL of the API is a different 'origin' to our react app\n          .then((resp) => {\n            console.log(resp);\n          return resp.json(); })\n          .then((data) => { // data input parameter is the result of the resolved resp.json() Promise (see https://developer.mozilla.org/en-US/docs/Web/API/Body/json)\n              console.log(data);\n              this.setState({ fetchedData: data }); // setState sets the component state with the data from the API response\n          })\n          .catch(function(error) {\n              console.log(JSON.stringify(error));\n          });\n  }\n\n\n\n  render() {\n      if(!this.state.fetchedData){ // only do the fetch if there is no fetchedData already (BTW this will run many times if the API is unavailable, or 'fetchIt() encounters an error)\n          this.fetchIt();\n      }\n\n    return (\n      <div>\n          {\n              this.state.fetchedData ? `fetched ${this.state.fetchedData.length} entries`  : 'no data' // This is a 'ternary' expression, a simple 'if->else'\n              /* equivalent to:\n\n                if(this.state.fetchedData) {\n                    return `fetched ${this.state.fetchedData.length} entries`; // this is 'javascript string interpolation'\n                } else {\n                    return 'no data';\n                }\n              *\n              * */\n          }\n      </div>\n    );\n  }\n}\n\nexport default App; // Export our component to be used by other react higher order components (parents), in this case, it's imported in 'index.js', data is only fetched when the component renders."],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAA0C;;AAC1C,OAAOC,KAAP,MAAkB,kBAAlB,C,CAAsC;AACtC;;;;AAMA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;EAAE;EAE1BG,WAAW,CAACC,KAAD,EAAQ;IACf,MAAMA,KAAN;;IADe,KAOrBC,OAPqB,GAOX,MAAM;MACZC,OAAO,CAACC,GAAR,CAAY,aAAZ;MACAN,KAAK,CAACO,GAAD,EAAM;QAAEC,IAAI,EAAE;MAAR,CAAN,CAAL,CAA6B;MAA7B,CACKC,IADL,CACWC,IAAD,IAAU;QACdL,OAAO,CAACC,GAAR,CAAYI,IAAZ;QACF,OAAOA,IAAI,CAACC,IAAL,EAAP;MAAqB,CAHzB,EAIKF,IAJL,CAIWG,IAAD,IAAU;QAAE;QACdP,OAAO,CAACC,GAAR,CAAYM,IAAZ;QACA,KAAKC,QAAL,CAAc;UAAEC,WAAW,EAAEF;QAAf,CAAd,EAFY,CAE0B;MACzC,CAPL,EAQKG,KARL,CAQW,UAASC,KAAT,EAAgB;QACnBX,OAAO,CAACC,GAAR,CAAYW,IAAI,CAACC,SAAL,CAAeF,KAAf,CAAZ;MACH,CAVL;IAWH,CApBoB;;IAEf,KAAKG,KAAL,GAAa;MACTL,WAAW,EAAE,IADJ,CACS;;IADT,CAAb;EAGH;;EAmBHM,MAAM,GAAG;IACL,IAAG,CAAC,KAAKD,KAAL,CAAWL,WAAf,EAA2B;MAAE;MACzB,KAAKV,OAAL;IACH;;IAEH,oBACE;MAAA,UAEQ,KAAKe,KAAL,CAAWL,WAAX,GAA0B,WAAU,KAAKK,KAAL,CAAWL,WAAX,CAAuBO,MAAO,UAAlE,GAA+E,SAFvF,CAEiG;;MACzF;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;IAVM;MAAA;MAAA;MAAA;IAAA,QADF;EAgBD;;AA/CyB;;AAkD5B,eAAepB,GAAf,C,CAAoB"},"metadata":{},"sourceType":"module"}