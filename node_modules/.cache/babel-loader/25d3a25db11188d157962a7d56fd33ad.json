{"ast":null,"code":"var _jsxFileName = \"/Users/jasonni/Desktop/feat-test/src/App.js\";\nimport React, { Component } from 'react'; //import 'React' default export, and { Component } non-default export from react\n\nimport fetch from 'isomorphic-fetch'; // isomorphic-fetch is used for both server side and client side 'fetch' (see https://github.com/matthew-andrews/isomorphic-fetch)\n// App.css was a hangover from the create-react-app, it's not really needed for this basic example\n\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction getRandomInt(max) {\n  return Math.floor(Math.random() * max);\n}\n\nclass App extends Component {\n  // This is the same as 'extends 'React.Component'\n  constructor(props) {\n    super(props);\n\n    this.fetchIt = () => {\n      console.log(\"running\");\n      axios.post(`http://localhost:8000/results`, {\n        document_name: documentName,\n        doc_desc: documentDescription,\n        questions: questions\n      }, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: localStorage.getItem(\"token\")\n        }\n      }).then(result => {\n        toast.success(result.data);\n      }).catch(err => {\n        if (validateTokenAge()) {\n          history.push(\"/login\");\n        }\n\n        if (err.message) err.response ? toast.error(err.response.data.msg ? err.response.data.msg : err.response.statusText) : toast.error(\"Network error\");else toast.error(\"Unknown error\");\n      });\n    };\n\n    this.state = {\n      fetchedData: null,\n      // stores the result of the fetch response body converted to a javascript object\n      restaurant: null,\n      done: true\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState, sS) {\n    // Typical usage (don't forget to compare props):\n    if (this.state.fetchedData !== prevState.restaurant || this.state.done === false) {\n      //this.setState({fetchedData: this.state.fetchedData});\n      this.setState({\n        restaurant: this.state.fetchedData,\n        done: true\n      });\n    }\n  }\n\n  render() {\n    if (!this.state.fetchedData) {\n      // only do the fetch if there is no fetchedData already (BTW this will run many times if the API is unavailable, or 'fetchIt() encounters an error)\n      this.fetchIt();\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: this.state.fetchedData ? `Go eat at ${this.state.fetchedData}` : 'Getting data' // This is a 'ternary' expression, a simple 'if->else'\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App; // Export our component to be used by other react higher order components (parents), in this case, it's imported in 'index.js', data is only fetched when the component renders.","map":{"version":3,"names":["React","Component","fetch","axios","getRandomInt","max","Math","floor","random","App","constructor","props","fetchIt","console","log","post","document_name","documentName","doc_desc","documentDescription","questions","headers","Authorization","localStorage","getItem","then","result","toast","success","data","catch","err","validateTokenAge","history","push","message","response","error","msg","statusText","state","fetchedData","restaurant","done","componentDidUpdate","prevProps","prevState","sS","setState","render"],"sources":["/Users/jasonni/Desktop/feat-test/src/App.js"],"sourcesContent":["import React, { Component } from 'react'; //import 'React' default export, and { Component } non-default export from react\nimport fetch from 'isomorphic-fetch'; // isomorphic-fetch is used for both server side and client side 'fetch' (see https://github.com/matthew-andrews/isomorphic-fetch)\n// App.css was a hangover from the create-react-app, it's not really needed for this basic example\nimport axios from \"axios\";\n\nfunction getRandomInt(max) {\n  return Math.floor(Math.random() * max);\n}\n\nclass App extends Component { // This is the same as 'extends 'React.Component'\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            fetchedData: null, // stores the result of the fetch response body converted to a javascript object\n            restaurant: null,\n            done: true\n        };\n    }\n    componentDidUpdate(prevProps, prevState, sS) {\n      // Typical usage (don't forget to compare props):\n      if ((this.state.fetchedData !== prevState.restaurant) || (this.state.done === false)) {\n        //this.setState({fetchedData: this.state.fetchedData});\n        this.setState({restaurant: this.state.fetchedData, done: true});\n      }\n    }\n\n  fetchIt = () => {\n    console.log(\"running\");\n    axios\n    .post(\n      `http://localhost:8000/results`,\n      {\n        document_name: documentName,\n        doc_desc: documentDescription,\n        questions: questions,\n      },\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: localStorage.getItem(\"token\"),\n        },\n      }\n    )\n    .then((result) => {\n      toast.success(result.data);\n    })\n    .catch((err) => {\n      if (validateTokenAge()) {\n        history.push(\"/login\");\n      }\n\n      if (err.message)\n        err.response\n          ? toast.error(\n              err.response.data.msg\n                ? err.response.data.msg\n                : err.response.statusText\n            )\n          : toast.error(\"Network error\");\n      else toast.error(\"Unknown error\");\n    });\n}\n\n\n  render() {\n      if(!this.state.fetchedData){ // only do the fetch if there is no fetchedData already (BTW this will run many times if the API is unavailable, or 'fetchIt() encounters an error)\n          this.fetchIt();\n      }\n\n    return (\n      <div>\n        <h1>\n        {\n          this.state.fetchedData ? `Go eat at ${this.state.fetchedData}`  : 'Getting data' // This is a 'ternary' expression, a simple 'if->else'\n        }\n        </h1>\n      </div>\n    );\n  }\n}\n\nexport default App; // Export our component to be used by other react higher order components (parents), in this case, it's imported in 'index.js', data is only fetched when the component renders."],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAA0C;;AAC1C,OAAOC,KAAP,MAAkB,kBAAlB,C,CAAsC;AACtC;;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,YAAT,CAAsBC,GAAtB,EAA2B;EACzB,OAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBH,GAA3B,CAAP;AACD;;AAED,MAAMI,GAAN,SAAkBR,SAAlB,CAA4B;EAAE;EAE1BS,WAAW,CAACC,KAAD,EAAQ;IACf,MAAMA,KAAN;;IADe,KAgBrBC,OAhBqB,GAgBX,MAAM;MACdC,OAAO,CAACC,GAAR,CAAY,SAAZ;MACAX,KAAK,CACJY,IADD,CAEG,+BAFH,EAGE;QACEC,aAAa,EAAEC,YADjB;QAEEC,QAAQ,EAAEC,mBAFZ;QAGEC,SAAS,EAAEA;MAHb,CAHF,EAQE;QACEC,OAAO,EAAE;UACP,gBAAgB,kBADT;UAEPC,aAAa,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB;QAFR;MADX,CARF,EAeCC,IAfD,CAeOC,MAAD,IAAY;QAChBC,KAAK,CAACC,OAAN,CAAcF,MAAM,CAACG,IAArB;MACD,CAjBD,EAkBCC,KAlBD,CAkBQC,GAAD,IAAS;QACd,IAAIC,gBAAgB,EAApB,EAAwB;UACtBC,OAAO,CAACC,IAAR,CAAa,QAAb;QACD;;QAED,IAAIH,GAAG,CAACI,OAAR,EACEJ,GAAG,CAACK,QAAJ,GACIT,KAAK,CAACU,KAAN,CACEN,GAAG,CAACK,QAAJ,CAAaP,IAAb,CAAkBS,GAAlB,GACIP,GAAG,CAACK,QAAJ,CAAaP,IAAb,CAAkBS,GADtB,GAEIP,GAAG,CAACK,QAAJ,CAAaG,UAHnB,CADJ,GAMIZ,KAAK,CAACU,KAAN,CAAY,eAAZ,CANJ,CADF,KAQKV,KAAK,CAACU,KAAN,CAAY,eAAZ;MACN,CAhCD;IAiCH,CAnDsB;;IAEf,KAAKG,KAAL,GAAa;MACTC,WAAW,EAAE,IADJ;MACU;MACnBC,UAAU,EAAE,IAFH;MAGTC,IAAI,EAAE;IAHG,CAAb;EAKH;;EACDC,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,EAAvB,EAA2B;IAC3C;IACA,IAAK,KAAKP,KAAL,CAAWC,WAAX,KAA2BK,SAAS,CAACJ,UAAtC,IAAsD,KAAKF,KAAL,CAAWG,IAAX,KAAoB,KAA9E,EAAsF;MACpF;MACA,KAAKK,QAAL,CAAc;QAACN,UAAU,EAAE,KAAKF,KAAL,CAAWC,WAAxB;QAAqCE,IAAI,EAAE;MAA3C,CAAd;IACD;EACF;;EAwCHM,MAAM,GAAG;IACL,IAAG,CAAC,KAAKT,KAAL,CAAWC,WAAf,EAA2B;MAAE;MACzB,KAAK7B,OAAL;IACH;;IAEH,oBACE;MAAA,uBACE;QAAA,UAEE,KAAK4B,KAAL,CAAWC,WAAX,GAA0B,aAAY,KAAKD,KAAL,CAAWC,WAAY,EAA7D,GAAkE,cAFpE,CAEmF;;MAFnF;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EASD;;AAtEyB;;AAyE5B,eAAehC,GAAf,C,CAAoB"},"metadata":{},"sourceType":"module"}